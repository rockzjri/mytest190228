<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itrock.ssm.dao.OrdersDao">

    <!--配置查询全部订单列表-->
    <resultMap id="ordersResultMap" type="orders">
        <!--配置订单对应关系-->
        <id column="id" property="id"/>
        <result column="orderNum" property="orderNum"/>
        <result column="orderTime" property="orderTime"/>
        <result column="peopleCount" property="peopleCount"/>
        <result column="orderDesc" property="orderDesc"/>
        <result column="payType" property="payType"/>
        <result column="orderStatus" property="orderStatus"/>

        <!--配置商品和订单一对一关系-->
        <association property="product" javaType="Product">
            <result column="productName" property="productName"/>
            <result column="cityName" property="cityName"/>
            <result column="DepartureTime" property="DepartureTime"/>
        </association>

        <!--订单会员的一对一关系-->
        <association property="member" javaType="Member">
            <result column="memberName" property="memberName"/>
            <result column="phoneNum" property="phoneNum"/>
        </association>

    </resultMap>


    <!--查询全部订单列表-->
    <select id="findAllOrders" resultMap="ordersResultMap">
        SELECT
o.`id`,
o.`orderNum`,
o.`orderTime`,
o.`peopleCount`,
o.`orderDesc`,
o.`payType`,
o.`orderStatus`,
p.`productName`,
p.`cityName`,
p.`DepartureTime`,
m.`memberName`,
m.`phoneNum`
 FROM orders o
 LEFT JOIN product p ON o.`id`=p.`id`
 LEFT JOIN member m ON o.`memberId`=m.`id`
    </select>

    <!--添加新订单数据-->
    <insert id="saveOrder" parameterType="orders">
            INSERT INTO orders(orderNum,orderTime,peopleCount,orderDesc,payType,orderStatus,productId,memberId)
    VALUES (#{orderNum},#{orderTime},#{peopleCount},#{orderDesc},#{payType},#{orderStatus},#{product.id},#{member.id})
    </insert>

    <!--修改订单数据-->
<select id="findOrdersById" parameterType="long" resultMap="ordersResultMap">
        SELECT
o.`id`,
o.`orderNum`,
o.`orderTime`,
o.`peopleCount`,
o.`orderDesc`,
o.`payType`,
o.`orderStatus`,
p.`productName`,
p.`cityName`,
p.`DepartureTime`,
m.`memberName`,
m.`phoneNum`
 FROM orders o
 LEFT JOIN product p ON o.`id`=p.`id`
 LEFT JOIN member m ON o.`memberId`=m.`id`
 WHERE o.id=#{id}
</select>

    <update id="updateOrders" parameterType="orders" >
      UPDATE  orders o
      set o.peopleCount=#{peopleCount},
      o.payType=#{payType},
      o.orderStatus=#{orderStatus}
      WHERE o.id=#{id}

         <!--update orders o-->
    <!--set o.peopleCount=#{peopleCount},o.payType=#{payType},o.orderStatus=#{orderStatus} where o.id=#{id}-->
    </update>


</mapper>